
// ✅ Route for admin to upload video file + metadata
const upload = multer({ storage: multer.memoryStorage() });

app.post("/api/upload", upload.single("video"), async (req, res) => {
  try {
    const title = req.body.title;
    const file = req.file;

    if (!file || !title) {
      return res.status(400).json({ error: "Title and video file are required" });
    }

    const blobName = file.originalname.replace(/\s+/g, "_") + "_" + Date.now();
    const blockBlobClient = containerClient.getBlockBlobClient(blobName);

    await blockBlobClient.uploadData(file.buffer, {
      blobHTTPHeaders: { blobContentType: file.mimetype },
    });

    const blobUrl = blockBlobClient.url;

    await sql.connect(dbConfig);
    await sql.query(`
      INSERT INTO Videos (title, blobUrl, uploadedAt)
      VALUES ('${title}', '${blobUrl}', GETDATE())
    `);

    res.status(200).json({ message: "Video uploaded successfully", blobUrl });
  } catch (err) {
    console.error("Upload error:", err.message);
    res.status(500).json({ error: "Upload failed" });
  }
});

// ✅ Start server
app.listen(3000, () => {
  console.log("✅ Server running on port 3000");
});


